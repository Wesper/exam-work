services:
  postgresql:
    image: 'bitnami/postgresql:latest'
    environment:
      ALLOW_EMPTY_PASSWORD: yes
    ports:
      - '5432:5432'
    volumes:
      - '~/exam/postgres/data:/bitnami/postgresql'
      - '~/exam/postgres/init:/docker-entrypoint-initdb.d'
  minio:
    image: 'bitnami/minio:latest'
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minio-root-user
      MINIO_ROOT_PASSWORD: minio-root-password
    volumes:
      - '~/exam/minio:/bitnami/minio/data'
  kafka:
    image: 'bitnami/kafka:latest'
    volumes:
      - '~/exam/kafka:/bitnami/minio/data'
    ports:
      - '9092:9092'
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  eureka:
    image: 'eureka-server:latest'
    ports:
      - '8761:8761'
    environment:
      eureka.client.service-url.defaultZone: http://eureka:8761/eureka
  gateway:
    image: 'gateway-server:latest'
    ports:
      - '8765:8765'
    environment:
      eureka.client.service-url.defaultZone: http://eureka:8761/eureka
    depends_on:
      - eureka
  static:
    image: 'static-server-fix:latest'
    ports:
      - '8094:8094'
    environment:
      eureka.client.service-url.defaultZone: http://eureka:8761/eureka
      minio.url: http://minio:9000
      minio.data.url: http://localhost:9000
      minio.access.key: accesskey
      minio.secret.key: secretkey
    depends_on:
      - eureka
      - minio
  auth:
    image: 'auth-service:latest'
    ports:
      - '8090:8090'
    environment:
      eureka.client.service-url.defaultZone: http://eureka:8761/eureka
      spring.datasource.url: jdbc:postgresql://postgresql:5432/auth
      spring.kafka.bootstrap-servers: kafka:9092
    depends_on:
      - postgresql
      - eureka
      - kafka
  email:
    image: 'email-service:latest'
    ports:
      - '8096:8096'
    depends_on:
      - eureka
      - kafka
    environment:
      spring.mail.password: mailpassword
      eureka.client.service-url.defaultZone: http://eureka:8761/eureka
      spring.kafka.bootstrap-servers: kafka:9092
  order:
    image: 'order-service:latest'
    ports:
      - '8093:8093'
    environment:
      eureka.client.service-url.defaultZone: http://eureka:8761/eureka
      spring.kafka.bootstrap-servers: kafka:9092
      spring.datasource.url: jdbc:postgresql://postgresql:5432/orders
    depends_on:
      - postgresql
      - eureka
      - kafka
  product:
    image: 'product-mplace-service:latest'
    ports:
      - '8091:8091'
    environment:
      eureka.client.service-url.defaultZone: http://eureka:8761/eureka
      spring.datasource.url: jdbc:postgresql://postgresql:5432/products
    depends_on:
      - postgresql
      - eureka
  profile:
    image: 'profile-service:latest'
    ports:
      - '8092:8092'
    environment:
      eureka.client.service-url.defaultZone: http://eureka:8761/eureka
      spring.datasource.url: jdbc:postgresql://postgresql:5432/profiles
    depends_on:
      - postgresql
      - eureka
  ui:
    image: 'ui:latest'
    ports:
      - '8095:8095'
    environment:
      minio.images.url: http://localhost:9000/products/
      gateway.host: http://gateway:8765
    depends_on:
      - postgresql
      - eureka